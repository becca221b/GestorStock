@using Entities.DTO
@using System.Security.Claims;
@model VentaDTO


@{
    ViewData["Title"] = "Cargar";
   
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (ViewBag.Alert != null)
{
    <div class="alert alert-dismissable alert-info">
        <button type="button" class="close" data-dismiss="alert">
            &times;
        </button>
        <strong>Aviso!</strong> @ViewBag.Alert
    </div>
}
<h1>Cargar</h1>
<div class="card">
    <div class="card-header">
        Nueva Compra
    </div>
    <div class="card-body">
        <form asp-action="Cargar" asp-controller="Venta" method="post">
            <div class="mb-3">
                <input asp-for="VentaId" type="hidden" class="form-control" id="inputId">
            </div>
            <div class="mb-3 form-group">
                <label>Categoría</label>
                @Html.DropDownList("Categorias", (List<SelectListItem>)ViewBag.Categorias, new { @class = "form-select", id = "categName" })
            </div>
            <div class="mb-3 form-group">
                <label>Producto</label>
                <select id="producto" name="producto" class="form-select">
                    <option value="0">Seleccione el producto</option>
                </select>
                @if (ViewBag.Alert != null)
                {
                    <p style=@ViewBag.StockOk>Vuelve a seleccionar el producto</p>
                }
            </div>
            <div class="mb-3">
                <input asp-for="ProductoId" type="hidden" class="form-control" id="productoId" value="producto">
            </div>
            <div class="mb-3">
                <label class="form-label">Cantidad</label>
                <input asp-for="Cantidad" type="number" class="form-control" id="inputCantidad">
                <p style=@ViewBag.StockOk>Error de Stock</p>
            </div>
            <div class="mb-3">
                <label for="inputUsuario" class="form-label">Usuario</label>
                <input asp-for="Usuario" type="text" class="form-control" id="inputUsuario" value="@if (User.Identity!.IsAuthenticated)
                            {
                                @User.Claims.Where(c => c.Type == ClaimTypes.Name).Select(c => c.Value).SingleOrDefault()
                            }" readonly>
            </div>
            <div class="mb-3">
                <label for="inputDate" class="form-label">Fecha de Compra</label>
                <input asp-for="FechaVenta" type="text" class="form-control" id="inputDate" value=@DateTime.Today.ToString("dd/MM/yyyy") readonly>
            </div>

            <button type="submit" class="btn btn-primary">Guardar</button>
            <a asp-action="Index" asp-asp-controller="Venta">Regresar a la Lista de Ventas</a>
        </form>
    </div>
</div>

<script>

    var comboCateg = document.getElementById("categName")
    comboCateg.addEventListener("change", Refresh);
    Refresh();

    function Refresh() {
        fetch("@Url.Content("~/Venta/Producto")" + "?categoriaId=" + comboCateg.value)
            .then(function (result) {
                if (result.ok) {
                    return result.json();
                }
            })
            .then(function (data) {
                console.log(data);
                miSelect = document.getElementById("producto");
                miSelect.innerHTML = "";
                data.forEach(function (element) {

                    let option = document.createElement("option");
                    option.appendChild(document.createTextNode(element.text));
                    option.value = element.value;

                    miSelect.appendChild(option);
                })
            })
    }

    const dateControl = document.querySelector('input[type="date"]');
    dateControl.value = DateTime.Today.ToString("yyyy/mm/dd");
</script>

